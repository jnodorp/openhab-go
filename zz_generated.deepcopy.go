//go:build !ignore_autogenerated

// Code generated by controller-gen. DO NOT EDIT.

package openhab

import (
	"encoding/json"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Action) DeepCopyInto(out *Action) {
	*out = *in
	if in.Configuration != nil {
		in, out := &in.Configuration, &out.Configuration
		*out = new(Configuration)
		(*in).DeepCopyInto(*out)
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.Inputs != nil {
		in, out := &in.Inputs, &out.Inputs
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.TypeUID != nil {
		in, out := &in.TypeUID, &out.TypeUID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Action.
func (in *Action) DeepCopy() *Action {
	if in == nil {
		return nil
	}
	out := new(Action)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionDTO) DeepCopyInto(out *ActionDTO) {
	*out = *in
	if in.Configuration != nil {
		in, out := &in.Configuration, &out.Configuration
		*out = make(json.RawMessage, len(*in))
		copy(*out, *in)
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.Inputs != nil {
		in, out := &in.Inputs, &out.Inputs
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionDTO.
func (in *ActionDTO) DeepCopy() *ActionDTO {
	if in == nil {
		return nil
	}
	out := new(ActionDTO)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Addon) DeepCopyInto(out *Addon) {
	*out = *in
	if in.Author != nil {
		in, out := &in.Author, &out.Author
		*out = new(string)
		**out = **in
	}
	if in.BackgroundColor != nil {
		in, out := &in.BackgroundColor, &out.BackgroundColor
		*out = new(string)
		**out = **in
	}
	if in.Compatible != nil {
		in, out := &in.Compatible, &out.Compatible
		*out = new(bool)
		**out = **in
	}
	if in.ConfigDescriptionURI != nil {
		in, out := &in.ConfigDescriptionURI, &out.ConfigDescriptionURI
		*out = new(string)
		**out = **in
	}
	if in.Connection != nil {
		in, out := &in.Connection, &out.Connection
		*out = new(string)
		**out = **in
	}
	if in.ContentType != nil {
		in, out := &in.ContentType, &out.ContentType
		*out = new(string)
		**out = **in
	}
	if in.Countries != nil {
		in, out := &in.Countries, &out.Countries
		*out = new([]string)
		if **in != nil {
			in, out := *in, *out
			*out = make([]string, len(*in))
			copy(*out, *in)
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DetailedDescription != nil {
		in, out := &in.DetailedDescription, &out.DetailedDescription
		*out = new(string)
		**out = **in
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.ImageLink != nil {
		in, out := &in.ImageLink, &out.ImageLink
		*out = new(string)
		**out = **in
	}
	if in.Installed != nil {
		in, out := &in.Installed, &out.Installed
		*out = new(bool)
		**out = **in
	}
	if in.Keywords != nil {
		in, out := &in.Keywords, &out.Keywords
		*out = new(string)
		**out = **in
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.License != nil {
		in, out := &in.License, &out.License
		*out = new(string)
		**out = **in
	}
	if in.Link != nil {
		in, out := &in.Link, &out.Link
		*out = new(string)
		**out = **in
	}
	if in.LoggerPackages != nil {
		in, out := &in.LoggerPackages, &out.LoggerPackages
		*out = new([]string)
		if **in != nil {
			in, out := *in, *out
			*out = make([]string, len(*in))
			copy(*out, *in)
		}
	}
	if in.Maturity != nil {
		in, out := &in.Maturity, &out.Maturity
		*out = new(string)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(json.RawMessage, len(*in))
		copy(*out, *in)
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Uid != nil {
		in, out := &in.Uid, &out.Uid
		*out = new(string)
		**out = **in
	}
	if in.VerifiedAuthor != nil {
		in, out := &in.VerifiedAuthor, &out.VerifiedAuthor
		*out = new(bool)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Addon.
func (in *Addon) DeepCopy() *Addon {
	if in == nil {
		return nil
	}
	out := new(Addon)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AddonType) DeepCopyInto(out *AddonType) {
	*out = *in
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AddonType.
func (in *AddonType) DeepCopy() *AddonType {
	if in == nil {
		return nil
	}
	out := new(AddonType)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AudioSinkDTO) DeepCopyInto(out *AudioSinkDTO) {
	*out = *in
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AudioSinkDTO.
func (in *AudioSinkDTO) DeepCopy() *AudioSinkDTO {
	if in == nil {
		return nil
	}
	out := new(AudioSinkDTO)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AudioSourceDTO) DeepCopyInto(out *AudioSourceDTO) {
	*out = *in
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AudioSourceDTO.
func (in *AudioSourceDTO) DeepCopy() *AudioSourceDTO {
	if in == nil {
		return nil
	}
	out := new(AudioSourceDTO)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChannelDTO) DeepCopyInto(out *ChannelDTO) {
	*out = *in
	if in.AutoUpdatePolicy != nil {
		in, out := &in.AutoUpdatePolicy, &out.AutoUpdatePolicy
		*out = new(string)
		**out = **in
	}
	if in.ChannelTypeUID != nil {
		in, out := &in.ChannelTypeUID, &out.ChannelTypeUID
		*out = new(string)
		**out = **in
	}
	if in.Configuration != nil {
		in, out := &in.Configuration, &out.Configuration
		*out = make(json.RawMessage, len(*in))
		copy(*out, *in)
	}
	if in.DefaultTags != nil {
		in, out := &in.DefaultTags, &out.DefaultTags
		*out = new([]string)
		if **in != nil {
			in, out := *in, *out
			*out = make([]string, len(*in))
			copy(*out, *in)
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.ItemType != nil {
		in, out := &in.ItemType, &out.ItemType
		*out = new(string)
		**out = **in
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Uid != nil {
		in, out := &in.Uid, &out.Uid
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChannelDTO.
func (in *ChannelDTO) DeepCopy() *ChannelDTO {
	if in == nil {
		return nil
	}
	out := new(ChannelDTO)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChannelDefinitionDTO) DeepCopyInto(out *ChannelDefinitionDTO) {
	*out = *in
	if in.Advanced != nil {
		in, out := &in.Advanced, &out.Advanced
		*out = new(bool)
		**out = **in
	}
	if in.Category != nil {
		in, out := &in.Category, &out.Category
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.StateDescription != nil {
		in, out := &in.StateDescription, &out.StateDescription
		*out = new(StateDescription)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new([]string)
		if **in != nil {
			in, out := *in, *out
			*out = make([]string, len(*in))
			copy(*out, *in)
		}
	}
	if in.TypeUID != nil {
		in, out := &in.TypeUID, &out.TypeUID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChannelDefinitionDTO.
func (in *ChannelDefinitionDTO) DeepCopy() *ChannelDefinitionDTO {
	if in == nil {
		return nil
	}
	out := new(ChannelDefinitionDTO)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChannelGroupDefinitionDTO) DeepCopyInto(out *ChannelGroupDefinitionDTO) {
	*out = *in
	if in.Channels != nil {
		in, out := &in.Channels, &out.Channels
		*out = new([]ChannelDefinitionDTO)
		if **in != nil {
			in, out := *in, *out
			*out = make([]ChannelDefinitionDTO, len(*in))
			for i := range *in {
				(*in)[i].DeepCopyInto(&(*out)[i])
			}
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChannelGroupDefinitionDTO.
func (in *ChannelGroupDefinitionDTO) DeepCopy() *ChannelGroupDefinitionDTO {
	if in == nil {
		return nil
	}
	out := new(ChannelGroupDefinitionDTO)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChannelTypeDTO) DeepCopyInto(out *ChannelTypeDTO) {
	*out = *in
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
	if in.Advanced != nil {
		in, out := &in.Advanced, &out.Advanced
		*out = new(bool)
		**out = **in
	}
	if in.Category != nil {
		in, out := &in.Category, &out.Category
		*out = new(string)
		**out = **in
	}
	if in.CommandDescription != nil {
		in, out := &in.CommandDescription, &out.CommandDescription
		*out = new(CommandDescription)
		(*in).DeepCopyInto(*out)
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ItemType != nil {
		in, out := &in.ItemType, &out.ItemType
		*out = new(string)
		**out = **in
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.ParameterGroups != nil {
		in, out := &in.ParameterGroups, &out.ParameterGroups
		*out = new([]ConfigDescriptionParameterGroupDTO)
		if **in != nil {
			in, out := *in, *out
			*out = make([]ConfigDescriptionParameterGroupDTO, len(*in))
			for i := range *in {
				(*in)[i].DeepCopyInto(&(*out)[i])
			}
		}
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new([]ConfigDescriptionParameterDTO)
		if **in != nil {
			in, out := *in, *out
			*out = make([]ConfigDescriptionParameterDTO, len(*in))
			for i := range *in {
				(*in)[i].DeepCopyInto(&(*out)[i])
			}
		}
	}
	if in.StateDescription != nil {
		in, out := &in.StateDescription, &out.StateDescription
		*out = new(StateDescription)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new([]string)
		if **in != nil {
			in, out := *in, *out
			*out = make([]string, len(*in))
			copy(*out, *in)
		}
	}
	if in.UnitHint != nil {
		in, out := &in.UnitHint, &out.UnitHint
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChannelTypeDTO.
func (in *ChannelTypeDTO) DeepCopy() *ChannelTypeDTO {
	if in == nil {
		return nil
	}
	out := new(ChannelTypeDTO)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CommandDescription) DeepCopyInto(out *CommandDescription) {
	*out = *in
	if in.CommandOptions != nil {
		in, out := &in.CommandOptions, &out.CommandOptions
		*out = new([]CommandOption)
		if **in != nil {
			in, out := *in, *out
			*out = make([]CommandOption, len(*in))
			for i := range *in {
				(*in)[i].DeepCopyInto(&(*out)[i])
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CommandDescription.
func (in *CommandDescription) DeepCopy() *CommandDescription {
	if in == nil {
		return nil
	}
	out := new(CommandDescription)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CommandOption) DeepCopyInto(out *CommandOption) {
	*out = *in
	if in.Command != nil {
		in, out := &in.Command, &out.Command
		*out = new(string)
		**out = **in
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CommandOption.
func (in *CommandOption) DeepCopy() *CommandOption {
	if in == nil {
		return nil
	}
	out := new(CommandOption)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Condition) DeepCopyInto(out *Condition) {
	*out = *in
	if in.Configuration != nil {
		in, out := &in.Configuration, &out.Configuration
		*out = new(Configuration)
		(*in).DeepCopyInto(*out)
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.Inputs != nil {
		in, out := &in.Inputs, &out.Inputs
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.TypeUID != nil {
		in, out := &in.TypeUID, &out.TypeUID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Condition.
func (in *Condition) DeepCopy() *Condition {
	if in == nil {
		return nil
	}
	out := new(Condition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionDTO) DeepCopyInto(out *ConditionDTO) {
	*out = *in
	if in.Configuration != nil {
		in, out := &in.Configuration, &out.Configuration
		*out = make(json.RawMessage, len(*in))
		copy(*out, *in)
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.Inputs != nil {
		in, out := &in.Inputs, &out.Inputs
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionDTO.
func (in *ConditionDTO) DeepCopy() *ConditionDTO {
	if in == nil {
		return nil
	}
	out := new(ConditionDTO)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigDescriptionDTO) DeepCopyInto(out *ConfigDescriptionDTO) {
	*out = *in
	if in.ParameterGroups != nil {
		in, out := &in.ParameterGroups, &out.ParameterGroups
		*out = new([]ConfigDescriptionParameterGroupDTO)
		if **in != nil {
			in, out := *in, *out
			*out = make([]ConfigDescriptionParameterGroupDTO, len(*in))
			for i := range *in {
				(*in)[i].DeepCopyInto(&(*out)[i])
			}
		}
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new([]ConfigDescriptionParameterDTO)
		if **in != nil {
			in, out := *in, *out
			*out = make([]ConfigDescriptionParameterDTO, len(*in))
			for i := range *in {
				(*in)[i].DeepCopyInto(&(*out)[i])
			}
		}
	}
	if in.Uri != nil {
		in, out := &in.Uri, &out.Uri
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigDescriptionDTO.
func (in *ConfigDescriptionDTO) DeepCopy() *ConfigDescriptionDTO {
	if in == nil {
		return nil
	}
	out := new(ConfigDescriptionDTO)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigDescriptionParameter) DeepCopyInto(out *ConfigDescriptionParameter) {
	*out = *in
	if in.Advanced != nil {
		in, out := &in.Advanced, &out.Advanced
		*out = new(bool)
		**out = **in
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.Default != nil {
		in, out := &in.Default, &out.Default
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FilterCriteria != nil {
		in, out := &in.FilterCriteria, &out.FilterCriteria
		*out = new([]FilterCriteria)
		if **in != nil {
			in, out := *in, *out
			*out = make([]FilterCriteria, len(*in))
			for i := range *in {
				(*in)[i].DeepCopyInto(&(*out)[i])
			}
		}
	}
	if in.GroupName != nil {
		in, out := &in.GroupName, &out.GroupName
		*out = new(string)
		**out = **in
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.LimitToOptions != nil {
		in, out := &in.LimitToOptions, &out.LimitToOptions
		*out = new(bool)
		**out = **in
	}
	if in.Maximum != nil {
		in, out := &in.Maximum, &out.Maximum
		*out = new(float32)
		**out = **in
	}
	if in.Minimum != nil {
		in, out := &in.Minimum, &out.Minimum
		*out = new(float32)
		**out = **in
	}
	if in.Multiple != nil {
		in, out := &in.Multiple, &out.Multiple
		*out = new(bool)
		**out = **in
	}
	if in.MultipleLimit != nil {
		in, out := &in.MultipleLimit, &out.MultipleLimit
		*out = new(int32)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = new([]ParameterOption)
		if **in != nil {
			in, out := *in, *out
			*out = make([]ParameterOption, len(*in))
			for i := range *in {
				(*in)[i].DeepCopyInto(&(*out)[i])
			}
		}
	}
	if in.Pattern != nil {
		in, out := &in.Pattern, &out.Pattern
		*out = new(string)
		**out = **in
	}
	if in.ReadOnly != nil {
		in, out := &in.ReadOnly, &out.ReadOnly
		*out = new(bool)
		**out = **in
	}
	if in.Required != nil {
		in, out := &in.Required, &out.Required
		*out = new(bool)
		**out = **in
	}
	if in.StepSize != nil {
		in, out := &in.StepSize, &out.StepSize
		*out = new(float32)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(ConfigDescriptionParameterType)
		**out = **in
	}
	if in.Unit != nil {
		in, out := &in.Unit, &out.Unit
		*out = new(string)
		**out = **in
	}
	if in.UnitLabel != nil {
		in, out := &in.UnitLabel, &out.UnitLabel
		*out = new(string)
		**out = **in
	}
	if in.Verifyable != nil {
		in, out := &in.Verifyable, &out.Verifyable
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigDescriptionParameter.
func (in *ConfigDescriptionParameter) DeepCopy() *ConfigDescriptionParameter {
	if in == nil {
		return nil
	}
	out := new(ConfigDescriptionParameter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigDescriptionParameterDTO) DeepCopyInto(out *ConfigDescriptionParameterDTO) {
	*out = *in
	if in.Advanced != nil {
		in, out := &in.Advanced, &out.Advanced
		*out = new(bool)
		**out = **in
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.DefaultValue != nil {
		in, out := &in.DefaultValue, &out.DefaultValue
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FilterCriteria != nil {
		in, out := &in.FilterCriteria, &out.FilterCriteria
		*out = new([]FilterCriteriaDTO)
		if **in != nil {
			in, out := *in, *out
			*out = make([]FilterCriteriaDTO, len(*in))
			for i := range *in {
				(*in)[i].DeepCopyInto(&(*out)[i])
			}
		}
	}
	if in.GroupName != nil {
		in, out := &in.GroupName, &out.GroupName
		*out = new(string)
		**out = **in
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.LimitToOptions != nil {
		in, out := &in.LimitToOptions, &out.LimitToOptions
		*out = new(bool)
		**out = **in
	}
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float32)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float32)
		**out = **in
	}
	if in.Multiple != nil {
		in, out := &in.Multiple, &out.Multiple
		*out = new(bool)
		**out = **in
	}
	if in.MultipleLimit != nil {
		in, out := &in.MultipleLimit, &out.MultipleLimit
		*out = new(int32)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = new([]ParameterOptionDTO)
		if **in != nil {
			in, out := *in, *out
			*out = make([]ParameterOptionDTO, len(*in))
			for i := range *in {
				(*in)[i].DeepCopyInto(&(*out)[i])
			}
		}
	}
	if in.Pattern != nil {
		in, out := &in.Pattern, &out.Pattern
		*out = new(string)
		**out = **in
	}
	if in.ReadOnly != nil {
		in, out := &in.ReadOnly, &out.ReadOnly
		*out = new(bool)
		**out = **in
	}
	if in.Required != nil {
		in, out := &in.Required, &out.Required
		*out = new(bool)
		**out = **in
	}
	if in.Stepsize != nil {
		in, out := &in.Stepsize, &out.Stepsize
		*out = new(float32)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(ConfigDescriptionParameterDTOType)
		**out = **in
	}
	if in.Unit != nil {
		in, out := &in.Unit, &out.Unit
		*out = new(string)
		**out = **in
	}
	if in.UnitLabel != nil {
		in, out := &in.UnitLabel, &out.UnitLabel
		*out = new(string)
		**out = **in
	}
	if in.Verify != nil {
		in, out := &in.Verify, &out.Verify
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigDescriptionParameterDTO.
func (in *ConfigDescriptionParameterDTO) DeepCopy() *ConfigDescriptionParameterDTO {
	if in == nil {
		return nil
	}
	out := new(ConfigDescriptionParameterDTO)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigDescriptionParameterGroupDTO) DeepCopyInto(out *ConfigDescriptionParameterGroupDTO) {
	*out = *in
	if in.Advanced != nil {
		in, out := &in.Advanced, &out.Advanced
		*out = new(bool)
		**out = **in
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigDescriptionParameterGroupDTO.
func (in *ConfigDescriptionParameterGroupDTO) DeepCopy() *ConfigDescriptionParameterGroupDTO {
	if in == nil {
		return nil
	}
	out := new(ConfigDescriptionParameterGroupDTO)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigStatusMessage) DeepCopyInto(out *ConfigStatusMessage) {
	*out = *in
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(string)
		**out = **in
	}
	if in.ParameterName != nil {
		in, out := &in.ParameterName, &out.ParameterName
		*out = new(string)
		**out = **in
	}
	if in.StatusCode != nil {
		in, out := &in.StatusCode, &out.StatusCode
		*out = new(int32)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(ConfigStatusMessageType)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigStatusMessage.
func (in *ConfigStatusMessage) DeepCopy() *ConfigStatusMessage {
	if in == nil {
		return nil
	}
	out := new(ConfigStatusMessage)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigurableServiceDTO) DeepCopyInto(out *ConfigurableServiceDTO) {
	*out = *in
	if in.Category != nil {
		in, out := &in.Category, &out.Category
		*out = new(string)
		**out = **in
	}
	if in.ConfigDescriptionURI != nil {
		in, out := &in.ConfigDescriptionURI, &out.ConfigDescriptionURI
		*out = new(string)
		**out = **in
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.Multiple != nil {
		in, out := &in.Multiple, &out.Multiple
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigurableServiceDTO.
func (in *ConfigurableServiceDTO) DeepCopy() *ConfigurableServiceDTO {
	if in == nil {
		return nil
	}
	out := new(ConfigurableServiceDTO)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Configuration) DeepCopyInto(out *Configuration) {
	*out = *in
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(json.RawMessage, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Configuration.
func (in *Configuration) DeepCopy() *Configuration {
	if in == nil {
		return nil
	}
	out := new(Configuration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DimensionInfo) DeepCopyInto(out *DimensionInfo) {
	*out = *in
	if in.Dimension != nil {
		in, out := &in.Dimension, &out.Dimension
		*out = new(string)
		**out = **in
	}
	if in.SystemUnit != nil {
		in, out := &in.SystemUnit, &out.SystemUnit
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DimensionInfo.
func (in *DimensionInfo) DeepCopy() *DimensionInfo {
	if in == nil {
		return nil
	}
	out := new(DimensionInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiscoveryResultDTO) DeepCopyInto(out *DiscoveryResultDTO) {
	*out = *in
	if in.BridgeUID != nil {
		in, out := &in.BridgeUID, &out.BridgeUID
		*out = new(string)
		**out = **in
	}
	if in.Flag != nil {
		in, out := &in.Flag, &out.Flag
		*out = new(DiscoveryResultDTOFlag)
		**out = **in
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(json.RawMessage, len(*in))
		copy(*out, *in)
	}
	if in.RepresentationProperty != nil {
		in, out := &in.RepresentationProperty, &out.RepresentationProperty
		*out = new(string)
		**out = **in
	}
	if in.ThingTypeUID != nil {
		in, out := &in.ThingTypeUID, &out.ThingTypeUID
		*out = new(string)
		**out = **in
	}
	if in.ThingUID != nil {
		in, out := &in.ThingUID, &out.ThingUID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiscoveryResultDTO.
func (in *DiscoveryResultDTO) DeepCopy() *DiscoveryResultDTO {
	if in == nil {
		return nil
	}
	out := new(DiscoveryResultDTO)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnrichedChannelDTO) DeepCopyInto(out *EnrichedChannelDTO) {
	*out = *in
	if in.AutoUpdatePolicy != nil {
		in, out := &in.AutoUpdatePolicy, &out.AutoUpdatePolicy
		*out = new(string)
		**out = **in
	}
	if in.ChannelTypeUID != nil {
		in, out := &in.ChannelTypeUID, &out.ChannelTypeUID
		*out = new(string)
		**out = **in
	}
	if in.Configuration != nil {
		in, out := &in.Configuration, &out.Configuration
		*out = make(json.RawMessage, len(*in))
		copy(*out, *in)
	}
	if in.DefaultTags != nil {
		in, out := &in.DefaultTags, &out.DefaultTags
		*out = new([]string)
		if **in != nil {
			in, out := *in, *out
			*out = make([]string, len(*in))
			copy(*out, *in)
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.ItemType != nil {
		in, out := &in.ItemType, &out.ItemType
		*out = new(string)
		**out = **in
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.LinkedItems != nil {
		in, out := &in.LinkedItems, &out.LinkedItems
		*out = new([]string)
		if **in != nil {
			in, out := *in, *out
			*out = make([]string, len(*in))
			copy(*out, *in)
		}
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Uid != nil {
		in, out := &in.Uid, &out.Uid
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnrichedChannelDTO.
func (in *EnrichedChannelDTO) DeepCopy() *EnrichedChannelDTO {
	if in == nil {
		return nil
	}
	out := new(EnrichedChannelDTO)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnrichedItemChannelLinkDTO) DeepCopyInto(out *EnrichedItemChannelLinkDTO) {
	*out = *in
	if in.ChannelUID != nil {
		in, out := &in.ChannelUID, &out.ChannelUID
		*out = new(string)
		**out = **in
	}
	if in.Configuration != nil {
		in, out := &in.Configuration, &out.Configuration
		*out = make(json.RawMessage, len(*in))
		copy(*out, *in)
	}
	if in.Editable != nil {
		in, out := &in.Editable, &out.Editable
		*out = new(bool)
		**out = **in
	}
	if in.ItemName != nil {
		in, out := &in.ItemName, &out.ItemName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnrichedItemChannelLinkDTO.
func (in *EnrichedItemChannelLinkDTO) DeepCopy() *EnrichedItemChannelLinkDTO {
	if in == nil {
		return nil
	}
	out := new(EnrichedItemChannelLinkDTO)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnrichedItemDTO) DeepCopyInto(out *EnrichedItemDTO) {
	*out = *in
	if in.Category != nil {
		in, out := &in.Category, &out.Category
		*out = new(string)
		**out = **in
	}
	if in.CommandDescription != nil {
		in, out := &in.CommandDescription, &out.CommandDescription
		*out = new(CommandDescription)
		(*in).DeepCopyInto(*out)
	}
	if in.Editable != nil {
		in, out := &in.Editable, &out.Editable
		*out = new(bool)
		**out = **in
	}
	if in.GroupNames != nil {
		in, out := &in.GroupNames, &out.GroupNames
		*out = new([]string)
		if **in != nil {
			in, out := *in, *out
			*out = make([]string, len(*in))
			copy(*out, *in)
		}
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.Link != nil {
		in, out := &in.Link, &out.Link
		*out = new(string)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(json.RawMessage, len(*in))
		copy(*out, *in)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.StateDescription != nil {
		in, out := &in.StateDescription, &out.StateDescription
		*out = new(StateDescription)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new([]string)
		if **in != nil {
			in, out := *in, *out
			*out = make([]string, len(*in))
			copy(*out, *in)
		}
	}
	if in.TransformedState != nil {
		in, out := &in.TransformedState, &out.TransformedState
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UnitSymbol != nil {
		in, out := &in.UnitSymbol, &out.UnitSymbol
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnrichedItemDTO.
func (in *EnrichedItemDTO) DeepCopy() *EnrichedItemDTO {
	if in == nil {
		return nil
	}
	out := new(EnrichedItemDTO)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnrichedRuleDTO) DeepCopyInto(out *EnrichedRuleDTO) {
	*out = *in
	if in.Actions != nil {
		in, out := &in.Actions, &out.Actions
		*out = new([]ActionDTO)
		if **in != nil {
			in, out := *in, *out
			*out = make([]ActionDTO, len(*in))
			for i := range *in {
				(*in)[i].DeepCopyInto(&(*out)[i])
			}
		}
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = new([]ConditionDTO)
		if **in != nil {
			in, out := *in, *out
			*out = make([]ConditionDTO, len(*in))
			for i := range *in {
				(*in)[i].DeepCopyInto(&(*out)[i])
			}
		}
	}
	if in.ConfigDescriptions != nil {
		in, out := &in.ConfigDescriptions, &out.ConfigDescriptions
		*out = new([]ConfigDescriptionParameterDTO)
		if **in != nil {
			in, out := *in, *out
			*out = make([]ConfigDescriptionParameterDTO, len(*in))
			for i := range *in {
				(*in)[i].DeepCopyInto(&(*out)[i])
			}
		}
	}
	if in.Configuration != nil {
		in, out := &in.Configuration, &out.Configuration
		*out = make(json.RawMessage, len(*in))
		copy(*out, *in)
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Editable != nil {
		in, out := &in.Editable, &out.Editable
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(RuleStatusInfo)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new([]string)
		if **in != nil {
			in, out := *in, *out
			*out = make([]string, len(*in))
			copy(*out, *in)
		}
	}
	if in.TemplateUID != nil {
		in, out := &in.TemplateUID, &out.TemplateUID
		*out = new(string)
		**out = **in
	}
	if in.Triggers != nil {
		in, out := &in.Triggers, &out.Triggers
		*out = new([]TriggerDTO)
		if **in != nil {
			in, out := *in, *out
			*out = make([]TriggerDTO, len(*in))
			for i := range *in {
				(*in)[i].DeepCopyInto(&(*out)[i])
			}
		}
	}
	if in.Uid != nil {
		in, out := &in.Uid, &out.Uid
		*out = new(string)
		**out = **in
	}
	if in.Visibility != nil {
		in, out := &in.Visibility, &out.Visibility
		*out = new(EnrichedRuleDTOVisibility)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnrichedRuleDTO.
func (in *EnrichedRuleDTO) DeepCopy() *EnrichedRuleDTO {
	if in == nil {
		return nil
	}
	out := new(EnrichedRuleDTO)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in EnrichedSemanticTagDTO) DeepCopyInto(out *EnrichedSemanticTagDTO) {
	{
		in := &in
		*out = make(EnrichedSemanticTagDTO, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnrichedSemanticTagDTO.
func (in EnrichedSemanticTagDTO) DeepCopy() EnrichedSemanticTagDTO {
	if in == nil {
		return nil
	}
	out := new(EnrichedSemanticTagDTO)
	in.DeepCopyInto(out)
	return *out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnrichedThingDTO) DeepCopyInto(out *EnrichedThingDTO) {
	*out = *in
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
	if in.BridgeUID != nil {
		in, out := &in.BridgeUID, &out.BridgeUID
		*out = new(string)
		**out = **in
	}
	if in.Channels != nil {
		in, out := &in.Channels, &out.Channels
		*out = new([]EnrichedChannelDTO)
		if **in != nil {
			in, out := *in, *out
			*out = make([]EnrichedChannelDTO, len(*in))
			for i := range *in {
				(*in)[i].DeepCopyInto(&(*out)[i])
			}
		}
	}
	if in.Configuration != nil {
		in, out := &in.Configuration, &out.Configuration
		*out = make(json.RawMessage, len(*in))
		copy(*out, *in)
	}
	if in.Editable != nil {
		in, out := &in.Editable, &out.Editable
		*out = new(bool)
		**out = **in
	}
	if in.FirmwareStatus != nil {
		in, out := &in.FirmwareStatus, &out.FirmwareStatus
		*out = new(FirmwareStatusDTO)
		(*in).DeepCopyInto(*out)
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.StatusInfo != nil {
		in, out := &in.StatusInfo, &out.StatusInfo
		*out = new(ThingStatusInfo)
		(*in).DeepCopyInto(*out)
	}
	if in.ThingTypeUID != nil {
		in, out := &in.ThingTypeUID, &out.ThingTypeUID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnrichedThingDTO.
func (in *EnrichedThingDTO) DeepCopy() *EnrichedThingDTO {
	if in == nil {
		return nil
	}
	out := new(EnrichedThingDTO)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilterCriteria) DeepCopyInto(out *FilterCriteria) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilterCriteria.
func (in *FilterCriteria) DeepCopy() *FilterCriteria {
	if in == nil {
		return nil
	}
	out := new(FilterCriteria)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilterCriteriaDTO) DeepCopyInto(out *FilterCriteriaDTO) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilterCriteriaDTO.
func (in *FilterCriteriaDTO) DeepCopy() *FilterCriteriaDTO {
	if in == nil {
		return nil
	}
	out := new(FilterCriteriaDTO)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirmwareDTO) DeepCopyInto(out *FirmwareDTO) {
	*out = *in
	if in.Changelog != nil {
		in, out := &in.Changelog, &out.Changelog
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Model != nil {
		in, out := &in.Model, &out.Model
		*out = new(string)
		**out = **in
	}
	if in.ModelRestricted != nil {
		in, out := &in.ModelRestricted, &out.ModelRestricted
		*out = new(bool)
		**out = **in
	}
	if in.PrerequisiteVersion != nil {
		in, out := &in.PrerequisiteVersion, &out.PrerequisiteVersion
		*out = new(string)
		**out = **in
	}
	if in.ThingTypeUID != nil {
		in, out := &in.ThingTypeUID, &out.ThingTypeUID
		*out = new(string)
		**out = **in
	}
	if in.Vendor != nil {
		in, out := &in.Vendor, &out.Vendor
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirmwareDTO.
func (in *FirmwareDTO) DeepCopy() *FirmwareDTO {
	if in == nil {
		return nil
	}
	out := new(FirmwareDTO)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirmwareStatusDTO) DeepCopyInto(out *FirmwareStatusDTO) {
	*out = *in
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.UpdatableVersion != nil {
		in, out := &in.UpdatableVersion, &out.UpdatableVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirmwareStatusDTO.
func (in *FirmwareStatusDTO) DeepCopy() *FirmwareStatusDTO {
	if in == nil {
		return nil
	}
	out := new(FirmwareStatusDTO)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GalleryItem) DeepCopyInto(out *GalleryItem) {
	*out = *in
	if in.Author != nil {
		in, out := &in.Author, &out.Author
		*out = new(string)
		**out = **in
	}
	if in.AuthorAvatarUrl != nil {
		in, out := &in.AuthorAvatarUrl, &out.AuthorAvatarUrl
		*out = new(string)
		**out = **in
	}
	if in.AuthorName != nil {
		in, out := &in.AuthorName, &out.AuthorName
		*out = new(string)
		**out = **in
	}
	if in.CreatedDate != nil {
		in, out := &in.CreatedDate, &out.CreatedDate
		*out = (*in).DeepCopy()
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.ImageUrl != nil {
		in, out := &in.ImageUrl, &out.ImageUrl
		*out = new(string)
		**out = **in
	}
	if in.Likes != nil {
		in, out := &in.Likes, &out.Likes
		*out = new(int32)
		**out = **in
	}
	if in.Posts != nil {
		in, out := &in.Posts, &out.Posts
		*out = new(int32)
		**out = **in
	}
	if in.Readme != nil {
		in, out := &in.Readme, &out.Readme
		*out = new(string)
		**out = **in
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
	if in.UpdatedDate != nil {
		in, out := &in.UpdatedDate, &out.UpdatedDate
		*out = (*in).DeepCopy()
	}
	if in.Views != nil {
		in, out := &in.Views, &out.Views
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GalleryItem.
func (in *GalleryItem) DeepCopy() *GalleryItem {
	if in == nil {
		return nil
	}
	out := new(GalleryItem)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GalleryWidgetsListItem) DeepCopyInto(out *GalleryWidgetsListItem) {
	*out = *in
	if in.CreatedDate != nil {
		in, out := &in.CreatedDate, &out.CreatedDate
		*out = (*in).DeepCopy()
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.ImageUrl != nil {
		in, out := &in.ImageUrl, &out.ImageUrl
		*out = new(string)
		**out = **in
	}
	if in.Likes != nil {
		in, out := &in.Likes, &out.Likes
		*out = new(int32)
		**out = **in
	}
	if in.Posts != nil {
		in, out := &in.Posts, &out.Posts
		*out = new(int32)
		**out = **in
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
	if in.Views != nil {
		in, out := &in.Views, &out.Views
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GalleryWidgetsListItem.
func (in *GalleryWidgetsListItem) DeepCopy() *GalleryWidgetsListItem {
	if in == nil {
		return nil
	}
	out := new(GalleryWidgetsListItem)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupFunctionDTO) DeepCopyInto(out *GroupFunctionDTO) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Params != nil {
		in, out := &in.Params, &out.Params
		*out = new([]string)
		if **in != nil {
			in, out := *in, *out
			*out = make([]string, len(*in))
			copy(*out, *in)
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupFunctionDTO.
func (in *GroupFunctionDTO) DeepCopy() *GroupFunctionDTO {
	if in == nil {
		return nil
	}
	out := new(GroupFunctionDTO)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupItemDTO) DeepCopyInto(out *GroupItemDTO) {
	*out = *in
	if in.Category != nil {
		in, out := &in.Category, &out.Category
		*out = new(string)
		**out = **in
	}
	if in.Function != nil {
		in, out := &in.Function, &out.Function
		*out = new(GroupFunctionDTO)
		(*in).DeepCopyInto(*out)
	}
	if in.GroupNames != nil {
		in, out := &in.GroupNames, &out.GroupNames
		*out = new([]string)
		if **in != nil {
			in, out := *in, *out
			*out = make([]string, len(*in))
			copy(*out, *in)
		}
	}
	if in.GroupType != nil {
		in, out := &in.GroupType, &out.GroupType
		*out = new(string)
		**out = **in
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new([]string)
		if **in != nil {
			in, out := *in, *out
			*out = make([]string, len(*in))
			copy(*out, *in)
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupItemDTO.
func (in *GroupItemDTO) DeepCopy() *GroupItemDTO {
	if in == nil {
		return nil
	}
	out := new(GroupItemDTO)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HistoryDataBean) DeepCopyInto(out *HistoryDataBean) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.Time != nil {
		in, out := &in.Time, &out.Time
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HistoryDataBean.
func (in *HistoryDataBean) DeepCopy() *HistoryDataBean {
	if in == nil {
		return nil
	}
	out := new(HistoryDataBean)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HumanLanguageInterpreterDTO) DeepCopyInto(out *HumanLanguageInterpreterDTO) {
	*out = *in
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.Locales != nil {
		in, out := &in.Locales, &out.Locales
		*out = new([]string)
		if **in != nil {
			in, out := *in, *out
			*out = make([]string, len(*in))
			copy(*out, *in)
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HumanLanguageInterpreterDTO.
func (in *HumanLanguageInterpreterDTO) DeepCopy() *HumanLanguageInterpreterDTO {
	if in == nil {
		return nil
	}
	out := new(HumanLanguageInterpreterDTO)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IconSet) DeepCopyInto(out *IconSet) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Formats != nil {
		in, out := &in.Formats, &out.Formats
		*out = new([]IconSetFormats)
		if **in != nil {
			in, out := *in, *out
			*out = make([]IconSetFormats, len(*in))
			copy(*out, *in)
		}
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IconSet.
func (in *IconSet) DeepCopy() *IconSet {
	if in == nil {
		return nil
	}
	out := new(IconSet)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Input) DeepCopyInto(out *Input) {
	*out = *in
	if in.DefaultValue != nil {
		in, out := &in.DefaultValue, &out.DefaultValue
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Reference != nil {
		in, out := &in.Reference, &out.Reference
		*out = new(string)
		**out = **in
	}
	if in.Required != nil {
		in, out := &in.Required, &out.Required
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new([]string)
		if **in != nil {
			in, out := *in, *out
			*out = make([]string, len(*in))
			copy(*out, *in)
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Input.
func (in *Input) DeepCopy() *Input {
	if in == nil {
		return nil
	}
	out := new(Input)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ItemChannelLinkDTO) DeepCopyInto(out *ItemChannelLinkDTO) {
	*out = *in
	if in.ChannelUID != nil {
		in, out := &in.ChannelUID, &out.ChannelUID
		*out = new(string)
		**out = **in
	}
	if in.Configuration != nil {
		in, out := &in.Configuration, &out.Configuration
		*out = make(json.RawMessage, len(*in))
		copy(*out, *in)
	}
	if in.ItemName != nil {
		in, out := &in.ItemName, &out.ItemName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ItemChannelLinkDTO.
func (in *ItemChannelLinkDTO) DeepCopy() *ItemChannelLinkDTO {
	if in == nil {
		return nil
	}
	out := new(ItemChannelLinkDTO)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ItemHistoryDTO) DeepCopyInto(out *ItemHistoryDTO) {
	*out = *in
	if in.Data != nil {
		in, out := &in.Data, &out.Data
		*out = new([]HistoryDataBean)
		if **in != nil {
			in, out := *in, *out
			*out = make([]HistoryDataBean, len(*in))
			for i := range *in {
				(*in)[i].DeepCopyInto(&(*out)[i])
			}
		}
	}
	if in.Datapoints != nil {
		in, out := &in.Datapoints, &out.Datapoints
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Totalrecords != nil {
		in, out := &in.Totalrecords, &out.Totalrecords
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ItemHistoryDTO.
func (in *ItemHistoryDTO) DeepCopy() *ItemHistoryDTO {
	if in == nil {
		return nil
	}
	out := new(ItemHistoryDTO)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Links) DeepCopyInto(out *Links) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Url != nil {
		in, out := &in.Url, &out.Url
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Links.
func (in *Links) DeepCopy() *Links {
	if in == nil {
		return nil
	}
	out := new(Links)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoggerBean) DeepCopyInto(out *LoggerBean) {
	*out = *in
	if in.Loggers != nil {
		in, out := &in.Loggers, &out.Loggers
		*out = new([]LoggerInfo)
		if **in != nil {
			in, out := *in, *out
			*out = make([]LoggerInfo, len(*in))
			for i := range *in {
				(*in)[i].DeepCopyInto(&(*out)[i])
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoggerBean.
func (in *LoggerBean) DeepCopy() *LoggerBean {
	if in == nil {
		return nil
	}
	out := new(LoggerBean)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoggerInfo) DeepCopyInto(out *LoggerInfo) {
	*out = *in
	if in.Level != nil {
		in, out := &in.Level, &out.Level
		*out = new(string)
		**out = **in
	}
	if in.LoggerName != nil {
		in, out := &in.LoggerName, &out.LoggerName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoggerInfo.
func (in *LoggerInfo) DeepCopy() *LoggerInfo {
	if in == nil {
		return nil
	}
	out := new(LoggerInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MappingDTO) DeepCopyInto(out *MappingDTO) {
	*out = *in
	if in.Column != nil {
		in, out := &in.Column, &out.Column
		*out = new(int32)
		**out = **in
	}
	if in.Command != nil {
		in, out := &in.Command, &out.Command
		*out = new(string)
		**out = **in
	}
	if in.Icon != nil {
		in, out := &in.Icon, &out.Icon
		*out = new(string)
		**out = **in
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.ReleaseCommand != nil {
		in, out := &in.ReleaseCommand, &out.ReleaseCommand
		*out = new(string)
		**out = **in
	}
	if in.Row != nil {
		in, out := &in.Row, &out.Row
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MappingDTO.
func (in *MappingDTO) DeepCopy() *MappingDTO {
	if in == nil {
		return nil
	}
	out := new(MappingDTO)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetadataDTO) DeepCopyInto(out *MetadataDTO) {
	*out = *in
	if in.Config != nil {
		in, out := &in.Config, &out.Config
		*out = make(json.RawMessage, len(*in))
		copy(*out, *in)
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetadataDTO.
func (in *MetadataDTO) DeepCopy() *MetadataDTO {
	if in == nil {
		return nil
	}
	out := new(MetadataDTO)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Module) DeepCopyInto(out *Module) {
	*out = *in
	if in.Configuration != nil {
		in, out := &in.Configuration, &out.Configuration
		*out = new(Configuration)
		(*in).DeepCopyInto(*out)
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.TypeUID != nil {
		in, out := &in.TypeUID, &out.TypeUID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Module.
func (in *Module) DeepCopy() *Module {
	if in == nil {
		return nil
	}
	out := new(Module)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModuleDTO) DeepCopyInto(out *ModuleDTO) {
	*out = *in
	if in.Configuration != nil {
		in, out := &in.Configuration, &out.Configuration
		*out = make(json.RawMessage, len(*in))
		copy(*out, *in)
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModuleDTO.
func (in *ModuleDTO) DeepCopy() *ModuleDTO {
	if in == nil {
		return nil
	}
	out := new(ModuleDTO)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModuleTypeDTO) DeepCopyInto(out *ModuleTypeDTO) {
	*out = *in
	if in.ConfigDescriptions != nil {
		in, out := &in.ConfigDescriptions, &out.ConfigDescriptions
		*out = new([]ConfigDescriptionParameterDTO)
		if **in != nil {
			in, out := *in, *out
			*out = make([]ConfigDescriptionParameterDTO, len(*in))
			for i := range *in {
				(*in)[i].DeepCopyInto(&(*out)[i])
			}
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new([]string)
		if **in != nil {
			in, out := *in, *out
			*out = make([]string, len(*in))
			copy(*out, *in)
		}
	}
	if in.Uid != nil {
		in, out := &in.Uid, &out.Uid
		*out = new(string)
		**out = **in
	}
	if in.Visibility != nil {
		in, out := &in.Visibility, &out.Visibility
		*out = new(ModuleTypeDTOVisibility)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModuleTypeDTO.
func (in *ModuleTypeDTO) DeepCopy() *ModuleTypeDTO {
	if in == nil {
		return nil
	}
	out := new(ModuleTypeDTO)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Output) DeepCopyInto(out *Output) {
	*out = *in
	if in.DefaultValue != nil {
		in, out := &in.DefaultValue, &out.DefaultValue
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Reference != nil {
		in, out := &in.Reference, &out.Reference
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new([]string)
		if **in != nil {
			in, out := *in, *out
			*out = make([]string, len(*in))
			copy(*out, *in)
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Output.
func (in *Output) DeepCopy() *Output {
	if in == nil {
		return nil
	}
	out := new(Output)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PageDTO) DeepCopyInto(out *PageDTO) {
	*out = *in
	if in.Icon != nil {
		in, out := &in.Icon, &out.Icon
		*out = new(string)
		**out = **in
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.Leaf != nil {
		in, out := &in.Leaf, &out.Leaf
		*out = new(bool)
		**out = **in
	}
	if in.Link != nil {
		in, out := &in.Link, &out.Link
		*out = new(string)
		**out = **in
	}
	if in.Parent != nil {
		in, out := &in.Parent, &out.Parent
		*out = new(PageDTO)
		(*in).DeepCopyInto(*out)
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(bool)
		**out = **in
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
	if in.Widgets != nil {
		in, out := &in.Widgets, &out.Widgets
		*out = new([]WidgetDTO)
		if **in != nil {
			in, out := *in, *out
			*out = make([]WidgetDTO, len(*in))
			for i := range *in {
				(*in)[i].DeepCopyInto(&(*out)[i])
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PageDTO.
func (in *PageDTO) DeepCopy() *PageDTO {
	if in == nil {
		return nil
	}
	out := new(PageDTO)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParameterOption) DeepCopyInto(out *ParameterOption) {
	*out = *in
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParameterOption.
func (in *ParameterOption) DeepCopy() *ParameterOption {
	if in == nil {
		return nil
	}
	out := new(ParameterOption)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParameterOptionDTO) DeepCopyInto(out *ParameterOptionDTO) {
	*out = *in
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParameterOptionDTO.
func (in *ParameterOptionDTO) DeepCopy() *ParameterOptionDTO {
	if in == nil {
		return nil
	}
	out := new(ParameterOptionDTO)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PersistenceCronStrategyDTO) DeepCopyInto(out *PersistenceCronStrategyDTO) {
	*out = *in
	if in.CronExpression != nil {
		in, out := &in.CronExpression, &out.CronExpression
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PersistenceCronStrategyDTO.
func (in *PersistenceCronStrategyDTO) DeepCopy() *PersistenceCronStrategyDTO {
	if in == nil {
		return nil
	}
	out := new(PersistenceCronStrategyDTO)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PersistenceFilterDTO) DeepCopyInto(out *PersistenceFilterDTO) {
	*out = *in
	if in.Inverted != nil {
		in, out := &in.Inverted, &out.Inverted
		*out = new(bool)
		**out = **in
	}
	if in.Lower != nil {
		in, out := &in.Lower, &out.Lower
		*out = new(float32)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Relative != nil {
		in, out := &in.Relative, &out.Relative
		*out = new(bool)
		**out = **in
	}
	if in.Unit != nil {
		in, out := &in.Unit, &out.Unit
		*out = new(string)
		**out = **in
	}
	if in.Upper != nil {
		in, out := &in.Upper, &out.Upper
		*out = new(float32)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(float32)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = new([]string)
		if **in != nil {
			in, out := *in, *out
			*out = make([]string, len(*in))
			copy(*out, *in)
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PersistenceFilterDTO.
func (in *PersistenceFilterDTO) DeepCopy() *PersistenceFilterDTO {
	if in == nil {
		return nil
	}
	out := new(PersistenceFilterDTO)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PersistenceItemConfigurationDTO) DeepCopyInto(out *PersistenceItemConfigurationDTO) {
	*out = *in
	if in.Alias != nil {
		in, out := &in.Alias, &out.Alias
		*out = new(string)
		**out = **in
	}
	if in.Filters != nil {
		in, out := &in.Filters, &out.Filters
		*out = new([]string)
		if **in != nil {
			in, out := *in, *out
			*out = make([]string, len(*in))
			copy(*out, *in)
		}
	}
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = new([]string)
		if **in != nil {
			in, out := *in, *out
			*out = make([]string, len(*in))
			copy(*out, *in)
		}
	}
	if in.Strategies != nil {
		in, out := &in.Strategies, &out.Strategies
		*out = new([]string)
		if **in != nil {
			in, out := *in, *out
			*out = make([]string, len(*in))
			copy(*out, *in)
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PersistenceItemConfigurationDTO.
func (in *PersistenceItemConfigurationDTO) DeepCopy() *PersistenceItemConfigurationDTO {
	if in == nil {
		return nil
	}
	out := new(PersistenceItemConfigurationDTO)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PersistenceItemInfo) DeepCopyInto(out *PersistenceItemInfo) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(int32)
		**out = **in
	}
	if in.Earliest != nil {
		in, out := &in.Earliest, &out.Earliest
		*out = (*in).DeepCopy()
	}
	if in.Latest != nil {
		in, out := &in.Latest, &out.Latest
		*out = (*in).DeepCopy()
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PersistenceItemInfo.
func (in *PersistenceItemInfo) DeepCopy() *PersistenceItemInfo {
	if in == nil {
		return nil
	}
	out := new(PersistenceItemInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PersistenceServiceConfigurationDTO) DeepCopyInto(out *PersistenceServiceConfigurationDTO) {
	*out = *in
	if in.Configs != nil {
		in, out := &in.Configs, &out.Configs
		*out = new([]PersistenceItemConfigurationDTO)
		if **in != nil {
			in, out := *in, *out
			*out = make([]PersistenceItemConfigurationDTO, len(*in))
			for i := range *in {
				(*in)[i].DeepCopyInto(&(*out)[i])
			}
		}
	}
	if in.CronStrategies != nil {
		in, out := &in.CronStrategies, &out.CronStrategies
		*out = new([]PersistenceCronStrategyDTO)
		if **in != nil {
			in, out := *in, *out
			*out = make([]PersistenceCronStrategyDTO, len(*in))
			for i := range *in {
				(*in)[i].DeepCopyInto(&(*out)[i])
			}
		}
	}
	if in.Defaults != nil {
		in, out := &in.Defaults, &out.Defaults
		*out = new([]string)
		if **in != nil {
			in, out := *in, *out
			*out = make([]string, len(*in))
			copy(*out, *in)
		}
	}
	if in.Editable != nil {
		in, out := &in.Editable, &out.Editable
		*out = new(bool)
		**out = **in
	}
	if in.EqualsFilters != nil {
		in, out := &in.EqualsFilters, &out.EqualsFilters
		*out = new([]PersistenceFilterDTO)
		if **in != nil {
			in, out := *in, *out
			*out = make([]PersistenceFilterDTO, len(*in))
			for i := range *in {
				(*in)[i].DeepCopyInto(&(*out)[i])
			}
		}
	}
	if in.IncludeFilters != nil {
		in, out := &in.IncludeFilters, &out.IncludeFilters
		*out = new([]PersistenceFilterDTO)
		if **in != nil {
			in, out := *in, *out
			*out = make([]PersistenceFilterDTO, len(*in))
			for i := range *in {
				(*in)[i].DeepCopyInto(&(*out)[i])
			}
		}
	}
	if in.ServiceId != nil {
		in, out := &in.ServiceId, &out.ServiceId
		*out = new(string)
		**out = **in
	}
	if in.ThresholdFilters != nil {
		in, out := &in.ThresholdFilters, &out.ThresholdFilters
		*out = new([]PersistenceFilterDTO)
		if **in != nil {
			in, out := *in, *out
			*out = make([]PersistenceFilterDTO, len(*in))
			for i := range *in {
				(*in)[i].DeepCopyInto(&(*out)[i])
			}
		}
	}
	if in.TimeFilters != nil {
		in, out := &in.TimeFilters, &out.TimeFilters
		*out = new([]PersistenceFilterDTO)
		if **in != nil {
			in, out := *in, *out
			*out = make([]PersistenceFilterDTO, len(*in))
			for i := range *in {
				(*in)[i].DeepCopyInto(&(*out)[i])
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PersistenceServiceConfigurationDTO.
func (in *PersistenceServiceConfigurationDTO) DeepCopy() *PersistenceServiceConfigurationDTO {
	if in == nil {
		return nil
	}
	out := new(PersistenceServiceConfigurationDTO)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PersistenceServiceDTO) DeepCopyInto(out *PersistenceServiceDTO) {
	*out = *in
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PersistenceServiceDTO.
func (in *PersistenceServiceDTO) DeepCopy() *PersistenceServiceDTO {
	if in == nil {
		return nil
	}
	out := new(PersistenceServiceDTO)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProfileTypeDTO) DeepCopyInto(out *ProfileTypeDTO) {
	*out = *in
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.SupportedItemTypes != nil {
		in, out := &in.SupportedItemTypes, &out.SupportedItemTypes
		*out = new([]string)
		if **in != nil {
			in, out := *in, *out
			*out = make([]string, len(*in))
			copy(*out, *in)
		}
	}
	if in.Uid != nil {
		in, out := &in.Uid, &out.Uid
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProfileTypeDTO.
func (in *ProfileTypeDTO) DeepCopy() *ProfileTypeDTO {
	if in == nil {
		return nil
	}
	out := new(ProfileTypeDTO)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RootBean) DeepCopyInto(out *RootBean) {
	*out = *in
	if in.Links != nil {
		in, out := &in.Links, &out.Links
		*out = new([]Links)
		if **in != nil {
			in, out := *in, *out
			*out = make([]Links, len(*in))
			for i := range *in {
				(*in)[i].DeepCopyInto(&(*out)[i])
			}
		}
	}
	if in.Locale != nil {
		in, out := &in.Locale, &out.Locale
		*out = new(string)
		**out = **in
	}
	if in.MeasurementSystem != nil {
		in, out := &in.MeasurementSystem, &out.MeasurementSystem
		*out = new(string)
		**out = **in
	}
	if in.RuntimeInfo != nil {
		in, out := &in.RuntimeInfo, &out.RuntimeInfo
		*out = new(RuntimeInfo)
		(*in).DeepCopyInto(*out)
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RootBean.
func (in *RootBean) DeepCopy() *RootBean {
	if in == nil {
		return nil
	}
	out := new(RootBean)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RootUIComponent) DeepCopyInto(out *RootUIComponent) {
	*out = *in
	if in.Component != nil {
		in, out := &in.Component, &out.Component
		*out = new(string)
		**out = **in
	}
	if in.Config != nil {
		in, out := &in.Config, &out.Config
		*out = make(json.RawMessage, len(*in))
		copy(*out, *in)
	}
	if in.Props != nil {
		in, out := &in.Props, &out.Props
		*out = new(ConfigDescriptionDTO)
		(*in).DeepCopyInto(*out)
	}
	if in.Slots != nil {
		in, out := &in.Slots, &out.Slots
		*out = new(map[string][]UIComponent)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string][]UIComponent, len(*in))
			for key, val := range *in {
				var outVal []UIComponent
				if val == nil {
					(*out)[key] = nil
				} else {
					inVal := (*in)[key]
					in, out := &inVal, &outVal
					*out = make([]UIComponent, len(*in))
					for i := range *in {
						(*in)[i].DeepCopyInto(&(*out)[i])
					}
				}
				(*out)[key] = outVal
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new([]string)
		if **in != nil {
			in, out := *in, *out
			*out = make([]string, len(*in))
			copy(*out, *in)
		}
	}
	if in.Timestamp != nil {
		in, out := &in.Timestamp, &out.Timestamp
		*out = (*in).DeepCopy()
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Uid != nil {
		in, out := &in.Uid, &out.Uid
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RootUIComponent.
func (in *RootUIComponent) DeepCopy() *RootUIComponent {
	if in == nil {
		return nil
	}
	out := new(RootUIComponent)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Rule) DeepCopyInto(out *Rule) {
	*out = *in
	if in.Actions != nil {
		in, out := &in.Actions, &out.Actions
		*out = new([]Action)
		if **in != nil {
			in, out := *in, *out
			*out = make([]Action, len(*in))
			for i := range *in {
				(*in)[i].DeepCopyInto(&(*out)[i])
			}
		}
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = new([]Condition)
		if **in != nil {
			in, out := *in, *out
			*out = make([]Condition, len(*in))
			for i := range *in {
				(*in)[i].DeepCopyInto(&(*out)[i])
			}
		}
	}
	if in.Configuration != nil {
		in, out := &in.Configuration, &out.Configuration
		*out = new(Configuration)
		(*in).DeepCopyInto(*out)
	}
	if in.ConfigurationDescriptions != nil {
		in, out := &in.ConfigurationDescriptions, &out.ConfigurationDescriptions
		*out = new([]ConfigDescriptionParameter)
		if **in != nil {
			in, out := *in, *out
			*out = make([]ConfigDescriptionParameter, len(*in))
			for i := range *in {
				(*in)[i].DeepCopyInto(&(*out)[i])
			}
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Modules != nil {
		in, out := &in.Modules, &out.Modules
		*out = new([]Module)
		if **in != nil {
			in, out := *in, *out
			*out = make([]Module, len(*in))
			for i := range *in {
				(*in)[i].DeepCopyInto(&(*out)[i])
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new([]string)
		if **in != nil {
			in, out := *in, *out
			*out = make([]string, len(*in))
			copy(*out, *in)
		}
	}
	if in.TemplateUID != nil {
		in, out := &in.TemplateUID, &out.TemplateUID
		*out = new(string)
		**out = **in
	}
	if in.Triggers != nil {
		in, out := &in.Triggers, &out.Triggers
		*out = new([]Trigger)
		if **in != nil {
			in, out := *in, *out
			*out = make([]Trigger, len(*in))
			for i := range *in {
				(*in)[i].DeepCopyInto(&(*out)[i])
			}
		}
	}
	if in.Uid != nil {
		in, out := &in.Uid, &out.Uid
		*out = new(string)
		**out = **in
	}
	if in.Visibility != nil {
		in, out := &in.Visibility, &out.Visibility
		*out = new(RuleVisibility)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Rule.
func (in *Rule) DeepCopy() *Rule {
	if in == nil {
		return nil
	}
	out := new(Rule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleDTO) DeepCopyInto(out *RuleDTO) {
	*out = *in
	if in.Actions != nil {
		in, out := &in.Actions, &out.Actions
		*out = new([]ActionDTO)
		if **in != nil {
			in, out := *in, *out
			*out = make([]ActionDTO, len(*in))
			for i := range *in {
				(*in)[i].DeepCopyInto(&(*out)[i])
			}
		}
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = new([]ConditionDTO)
		if **in != nil {
			in, out := *in, *out
			*out = make([]ConditionDTO, len(*in))
			for i := range *in {
				(*in)[i].DeepCopyInto(&(*out)[i])
			}
		}
	}
	if in.ConfigDescriptions != nil {
		in, out := &in.ConfigDescriptions, &out.ConfigDescriptions
		*out = new([]ConfigDescriptionParameterDTO)
		if **in != nil {
			in, out := *in, *out
			*out = make([]ConfigDescriptionParameterDTO, len(*in))
			for i := range *in {
				(*in)[i].DeepCopyInto(&(*out)[i])
			}
		}
	}
	if in.Configuration != nil {
		in, out := &in.Configuration, &out.Configuration
		*out = make(json.RawMessage, len(*in))
		copy(*out, *in)
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new([]string)
		if **in != nil {
			in, out := *in, *out
			*out = make([]string, len(*in))
			copy(*out, *in)
		}
	}
	if in.TemplateUID != nil {
		in, out := &in.TemplateUID, &out.TemplateUID
		*out = new(string)
		**out = **in
	}
	if in.Triggers != nil {
		in, out := &in.Triggers, &out.Triggers
		*out = new([]TriggerDTO)
		if **in != nil {
			in, out := *in, *out
			*out = make([]TriggerDTO, len(*in))
			for i := range *in {
				(*in)[i].DeepCopyInto(&(*out)[i])
			}
		}
	}
	if in.Uid != nil {
		in, out := &in.Uid, &out.Uid
		*out = new(string)
		**out = **in
	}
	if in.Visibility != nil {
		in, out := &in.Visibility, &out.Visibility
		*out = new(RuleDTOVisibility)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleDTO.
func (in *RuleDTO) DeepCopy() *RuleDTO {
	if in == nil {
		return nil
	}
	out := new(RuleDTO)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleExecution) DeepCopyInto(out *RuleExecution) {
	*out = *in
	if in.Date != nil {
		in, out := &in.Date, &out.Date
		*out = (*in).DeepCopy()
	}
	if in.Rule != nil {
		in, out := &in.Rule, &out.Rule
		*out = new(Rule)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleExecution.
func (in *RuleExecution) DeepCopy() *RuleExecution {
	if in == nil {
		return nil
	}
	out := new(RuleExecution)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleStatusInfo) DeepCopyInto(out *RuleStatusInfo) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(RuleStatusInfoStatus)
		**out = **in
	}
	if in.StatusDetail != nil {
		in, out := &in.StatusDetail, &out.StatusDetail
		*out = new(RuleStatusInfoStatusDetail)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleStatusInfo.
func (in *RuleStatusInfo) DeepCopy() *RuleStatusInfo {
	if in == nil {
		return nil
	}
	out := new(RuleStatusInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuntimeInfo) DeepCopyInto(out *RuntimeInfo) {
	*out = *in
	if in.BuildString != nil {
		in, out := &in.BuildString, &out.BuildString
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuntimeInfo.
func (in *RuntimeInfo) DeepCopy() *RuntimeInfo {
	if in == nil {
		return nil
	}
	out := new(RuntimeInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SitemapDTO) DeepCopyInto(out *SitemapDTO) {
	*out = *in
	if in.Homepage != nil {
		in, out := &in.Homepage, &out.Homepage
		*out = new(PageDTO)
		(*in).DeepCopyInto(*out)
	}
	if in.Icon != nil {
		in, out := &in.Icon, &out.Icon
		*out = new(string)
		**out = **in
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.Link != nil {
		in, out := &in.Link, &out.Link
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SitemapDTO.
func (in *SitemapDTO) DeepCopy() *SitemapDTO {
	if in == nil {
		return nil
	}
	out := new(SitemapDTO)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StateDescription) DeepCopyInto(out *StateDescription) {
	*out = *in
	if in.Maximum != nil {
		in, out := &in.Maximum, &out.Maximum
		*out = new(float32)
		**out = **in
	}
	if in.Minimum != nil {
		in, out := &in.Minimum, &out.Minimum
		*out = new(float32)
		**out = **in
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = new([]StateOption)
		if **in != nil {
			in, out := *in, *out
			*out = make([]StateOption, len(*in))
			for i := range *in {
				(*in)[i].DeepCopyInto(&(*out)[i])
			}
		}
	}
	if in.Pattern != nil {
		in, out := &in.Pattern, &out.Pattern
		*out = new(string)
		**out = **in
	}
	if in.ReadOnly != nil {
		in, out := &in.ReadOnly, &out.ReadOnly
		*out = new(bool)
		**out = **in
	}
	if in.Step != nil {
		in, out := &in.Step, &out.Step
		*out = new(float32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StateDescription.
func (in *StateDescription) DeepCopy() *StateDescription {
	if in == nil {
		return nil
	}
	out := new(StateDescription)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StateOption) DeepCopyInto(out *StateOption) {
	*out = *in
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StateOption.
func (in *StateOption) DeepCopy() *StateOption {
	if in == nil {
		return nil
	}
	out := new(StateOption)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StrippedThingTypeDTO) DeepCopyInto(out *StrippedThingTypeDTO) {
	*out = *in
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
	if in.Bridge != nil {
		in, out := &in.Bridge, &out.Bridge
		*out = new(bool)
		**out = **in
	}
	if in.Category != nil {
		in, out := &in.Category, &out.Category
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.Listed != nil {
		in, out := &in.Listed, &out.Listed
		*out = new(bool)
		**out = **in
	}
	if in.SupportedBridgeTypeUIDs != nil {
		in, out := &in.SupportedBridgeTypeUIDs, &out.SupportedBridgeTypeUIDs
		*out = new([]string)
		if **in != nil {
			in, out := *in, *out
			*out = make([]string, len(*in))
			copy(*out, *in)
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StrippedThingTypeDTO.
func (in *StrippedThingTypeDTO) DeepCopy() *StrippedThingTypeDTO {
	if in == nil {
		return nil
	}
	out := new(StrippedThingTypeDTO)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SystemInfo) DeepCopyInto(out *SystemInfo) {
	*out = *in
	if in.AvailableProcessors != nil {
		in, out := &in.AvailableProcessors, &out.AvailableProcessors
		*out = new(int32)
		**out = **in
	}
	if in.ConfigFolder != nil {
		in, out := &in.ConfigFolder, &out.ConfigFolder
		*out = new(string)
		**out = **in
	}
	if in.FreeMemory != nil {
		in, out := &in.FreeMemory, &out.FreeMemory
		*out = new(int64)
		**out = **in
	}
	if in.JavaVendor != nil {
		in, out := &in.JavaVendor, &out.JavaVendor
		*out = new(string)
		**out = **in
	}
	if in.JavaVendorVersion != nil {
		in, out := &in.JavaVendorVersion, &out.JavaVendorVersion
		*out = new(string)
		**out = **in
	}
	if in.JavaVersion != nil {
		in, out := &in.JavaVersion, &out.JavaVersion
		*out = new(string)
		**out = **in
	}
	if in.LogFolder != nil {
		in, out := &in.LogFolder, &out.LogFolder
		*out = new(string)
		**out = **in
	}
	if in.OsArchitecture != nil {
		in, out := &in.OsArchitecture, &out.OsArchitecture
		*out = new(string)
		**out = **in
	}
	if in.OsName != nil {
		in, out := &in.OsName, &out.OsName
		*out = new(string)
		**out = **in
	}
	if in.OsVersion != nil {
		in, out := &in.OsVersion, &out.OsVersion
		*out = new(string)
		**out = **in
	}
	if in.StartLevel != nil {
		in, out := &in.StartLevel, &out.StartLevel
		*out = new(int32)
		**out = **in
	}
	if in.TotalMemory != nil {
		in, out := &in.TotalMemory, &out.TotalMemory
		*out = new(int64)
		**out = **in
	}
	if in.Uptime != nil {
		in, out := &in.Uptime, &out.Uptime
		*out = new(int64)
		**out = **in
	}
	if in.UserdataFolder != nil {
		in, out := &in.UserdataFolder, &out.UserdataFolder
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SystemInfo.
func (in *SystemInfo) DeepCopy() *SystemInfo {
	if in == nil {
		return nil
	}
	out := new(SystemInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SystemInfoBean) DeepCopyInto(out *SystemInfoBean) {
	*out = *in
	if in.SystemInfo != nil {
		in, out := &in.SystemInfo, &out.SystemInfo
		*out = new(SystemInfo)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SystemInfoBean.
func (in *SystemInfoBean) DeepCopy() *SystemInfoBean {
	if in == nil {
		return nil
	}
	out := new(SystemInfoBean)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Template) DeepCopyInto(out *Template) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new([]string)
		if **in != nil {
			in, out := *in, *out
			*out = make([]string, len(*in))
			copy(*out, *in)
		}
	}
	if in.Uid != nil {
		in, out := &in.Uid, &out.Uid
		*out = new(string)
		**out = **in
	}
	if in.Visibility != nil {
		in, out := &in.Visibility, &out.Visibility
		*out = new(TemplateVisibility)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Template.
func (in *Template) DeepCopy() *Template {
	if in == nil {
		return nil
	}
	out := new(Template)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThingActionDTO) DeepCopyInto(out *ThingActionDTO) {
	*out = *in
	if in.ActionUid != nil {
		in, out := &in.ActionUid, &out.ActionUid
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Inputs != nil {
		in, out := &in.Inputs, &out.Inputs
		*out = new([]Input)
		if **in != nil {
			in, out := *in, *out
			*out = make([]Input, len(*in))
			for i := range *in {
				(*in)[i].DeepCopyInto(&(*out)[i])
			}
		}
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.Outputs != nil {
		in, out := &in.Outputs, &out.Outputs
		*out = new([]Output)
		if **in != nil {
			in, out := *in, *out
			*out = make([]Output, len(*in))
			for i := range *in {
				(*in)[i].DeepCopyInto(&(*out)[i])
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThingActionDTO.
func (in *ThingActionDTO) DeepCopy() *ThingActionDTO {
	if in == nil {
		return nil
	}
	out := new(ThingActionDTO)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThingDTO) DeepCopyInto(out *ThingDTO) {
	*out = *in
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
	if in.BridgeUID != nil {
		in, out := &in.BridgeUID, &out.BridgeUID
		*out = new(string)
		**out = **in
	}
	if in.Channels != nil {
		in, out := &in.Channels, &out.Channels
		*out = new([]ChannelDTO)
		if **in != nil {
			in, out := *in, *out
			*out = make([]ChannelDTO, len(*in))
			for i := range *in {
				(*in)[i].DeepCopyInto(&(*out)[i])
			}
		}
	}
	if in.Configuration != nil {
		in, out := &in.Configuration, &out.Configuration
		*out = make(json.RawMessage, len(*in))
		copy(*out, *in)
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.ThingTypeUID != nil {
		in, out := &in.ThingTypeUID, &out.ThingTypeUID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThingDTO.
func (in *ThingDTO) DeepCopy() *ThingDTO {
	if in == nil {
		return nil
	}
	out := new(ThingDTO)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThingStatusInfo) DeepCopyInto(out *ThingStatusInfo) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(ThingStatusInfoStatus)
		**out = **in
	}
	if in.StatusDetail != nil {
		in, out := &in.StatusDetail, &out.StatusDetail
		*out = new(ThingStatusInfoStatusDetail)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThingStatusInfo.
func (in *ThingStatusInfo) DeepCopy() *ThingStatusInfo {
	if in == nil {
		return nil
	}
	out := new(ThingStatusInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThingTypeDTO) DeepCopyInto(out *ThingTypeDTO) {
	*out = *in
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
	if in.Bridge != nil {
		in, out := &in.Bridge, &out.Bridge
		*out = new(bool)
		**out = **in
	}
	if in.Category != nil {
		in, out := &in.Category, &out.Category
		*out = new(string)
		**out = **in
	}
	if in.ChannelGroups != nil {
		in, out := &in.ChannelGroups, &out.ChannelGroups
		*out = new([]ChannelGroupDefinitionDTO)
		if **in != nil {
			in, out := *in, *out
			*out = make([]ChannelGroupDefinitionDTO, len(*in))
			for i := range *in {
				(*in)[i].DeepCopyInto(&(*out)[i])
			}
		}
	}
	if in.Channels != nil {
		in, out := &in.Channels, &out.Channels
		*out = new([]ChannelDefinitionDTO)
		if **in != nil {
			in, out := *in, *out
			*out = make([]ChannelDefinitionDTO, len(*in))
			for i := range *in {
				(*in)[i].DeepCopyInto(&(*out)[i])
			}
		}
	}
	if in.ConfigParameters != nil {
		in, out := &in.ConfigParameters, &out.ConfigParameters
		*out = new([]ConfigDescriptionParameterDTO)
		if **in != nil {
			in, out := *in, *out
			*out = make([]ConfigDescriptionParameterDTO, len(*in))
			for i := range *in {
				(*in)[i].DeepCopyInto(&(*out)[i])
			}
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ExtensibleChannelTypeIds != nil {
		in, out := &in.ExtensibleChannelTypeIds, &out.ExtensibleChannelTypeIds
		*out = new([]string)
		if **in != nil {
			in, out := *in, *out
			*out = make([]string, len(*in))
			copy(*out, *in)
		}
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.Listed != nil {
		in, out := &in.Listed, &out.Listed
		*out = new(bool)
		**out = **in
	}
	if in.ParameterGroups != nil {
		in, out := &in.ParameterGroups, &out.ParameterGroups
		*out = new([]ConfigDescriptionParameterGroupDTO)
		if **in != nil {
			in, out := *in, *out
			*out = make([]ConfigDescriptionParameterGroupDTO, len(*in))
			for i := range *in {
				(*in)[i].DeepCopyInto(&(*out)[i])
			}
		}
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.SupportedBridgeTypeUIDs != nil {
		in, out := &in.SupportedBridgeTypeUIDs, &out.SupportedBridgeTypeUIDs
		*out = new([]string)
		if **in != nil {
			in, out := *in, *out
			*out = make([]string, len(*in))
			copy(*out, *in)
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThingTypeDTO.
func (in *ThingTypeDTO) DeepCopy() *ThingTypeDTO {
	if in == nil {
		return nil
	}
	out := new(ThingTypeDTO)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TileDTO) DeepCopyInto(out *TileDTO) {
	*out = *in
	if in.ImageUrl != nil {
		in, out := &in.ImageUrl, &out.ImageUrl
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Overlay != nil {
		in, out := &in.Overlay, &out.Overlay
		*out = new(string)
		**out = **in
	}
	if in.Url != nil {
		in, out := &in.Url, &out.Url
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TileDTO.
func (in *TileDTO) DeepCopy() *TileDTO {
	if in == nil {
		return nil
	}
	out := new(TileDTO)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TokenResponseDTO) DeepCopyInto(out *TokenResponseDTO) {
	*out = *in
	if in.AccessToken != nil {
		in, out := &in.AccessToken, &out.AccessToken
		*out = new(string)
		**out = **in
	}
	if in.ExpiresIn != nil {
		in, out := &in.ExpiresIn, &out.ExpiresIn
		*out = new(int32)
		**out = **in
	}
	if in.RefreshToken != nil {
		in, out := &in.RefreshToken, &out.RefreshToken
		*out = new(string)
		**out = **in
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = new(string)
		**out = **in
	}
	if in.TokenType != nil {
		in, out := &in.TokenType, &out.TokenType
		*out = new(string)
		**out = **in
	}
	if in.User != nil {
		in, out := &in.User, &out.User
		*out = new(UserDTO)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TokenResponseDTO.
func (in *TokenResponseDTO) DeepCopy() *TokenResponseDTO {
	if in == nil {
		return nil
	}
	out := new(TokenResponseDTO)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Transformation) DeepCopyInto(out *Transformation) {
	*out = *in
	if in.Configuration != nil {
		in, out := &in.Configuration, &out.Configuration
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Uid != nil {
		in, out := &in.Uid, &out.Uid
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Transformation.
func (in *Transformation) DeepCopy() *Transformation {
	if in == nil {
		return nil
	}
	out := new(Transformation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransformationDTO) DeepCopyInto(out *TransformationDTO) {
	*out = *in
	if in.Configuration != nil {
		in, out := &in.Configuration, &out.Configuration
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Editable != nil {
		in, out := &in.Editable, &out.Editable
		*out = new(bool)
		**out = **in
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Uid != nil {
		in, out := &in.Uid, &out.Uid
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransformationDTO.
func (in *TransformationDTO) DeepCopy() *TransformationDTO {
	if in == nil {
		return nil
	}
	out := new(TransformationDTO)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Trigger) DeepCopyInto(out *Trigger) {
	*out = *in
	if in.Configuration != nil {
		in, out := &in.Configuration, &out.Configuration
		*out = new(Configuration)
		(*in).DeepCopyInto(*out)
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.TypeUID != nil {
		in, out := &in.TypeUID, &out.TypeUID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Trigger.
func (in *Trigger) DeepCopy() *Trigger {
	if in == nil {
		return nil
	}
	out := new(Trigger)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerDTO) DeepCopyInto(out *TriggerDTO) {
	*out = *in
	if in.Configuration != nil {
		in, out := &in.Configuration, &out.Configuration
		*out = make(json.RawMessage, len(*in))
		copy(*out, *in)
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerDTO.
func (in *TriggerDTO) DeepCopy() *TriggerDTO {
	if in == nil {
		return nil
	}
	out := new(TriggerDTO)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UIComponent) DeepCopyInto(out *UIComponent) {
	*out = *in
	if in.Component != nil {
		in, out := &in.Component, &out.Component
		*out = new(string)
		**out = **in
	}
	if in.Config != nil {
		in, out := &in.Config, &out.Config
		*out = make(json.RawMessage, len(*in))
		copy(*out, *in)
	}
	if in.Slots != nil {
		in, out := &in.Slots, &out.Slots
		*out = new(map[string][]json.RawMessage)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string][]json.RawMessage, len(*in))
			for key, val := range *in {
				var outVal []json.RawMessage
				if val == nil {
					(*out)[key] = nil
				} else {
					inVal := (*in)[key]
					in, out := &inVal, &outVal
					*out = make([]json.RawMessage, len(*in))
					for i := range *in {
						if (*in)[i] != nil {
							in, out := &(*in)[i], &(*out)[i]
							*out = make(json.RawMessage, len(*in))
							copy(*out, *in)
						}
					}
				}
				(*out)[key] = outVal
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UIComponent.
func (in *UIComponent) DeepCopy() *UIComponent {
	if in == nil {
		return nil
	}
	out := new(UIComponent)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UoMInfo) DeepCopyInto(out *UoMInfo) {
	*out = *in
	if in.Dimensions != nil {
		in, out := &in.Dimensions, &out.Dimensions
		*out = new([]DimensionInfo)
		if **in != nil {
			in, out := *in, *out
			*out = make([]DimensionInfo, len(*in))
			for i := range *in {
				(*in)[i].DeepCopyInto(&(*out)[i])
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UoMInfo.
func (in *UoMInfo) DeepCopy() *UoMInfo {
	if in == nil {
		return nil
	}
	out := new(UoMInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UoMInfoBean) DeepCopyInto(out *UoMInfoBean) {
	*out = *in
	if in.UomInfo != nil {
		in, out := &in.UomInfo, &out.UomInfo
		*out = new(UoMInfo)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UoMInfoBean.
func (in *UoMInfoBean) DeepCopy() *UoMInfoBean {
	if in == nil {
		return nil
	}
	out := new(UoMInfoBean)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserApiTokenDTO) DeepCopyInto(out *UserApiTokenDTO) {
	*out = *in
	if in.CreatedTime != nil {
		in, out := &in.CreatedTime, &out.CreatedTime
		*out = (*in).DeepCopy()
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserApiTokenDTO.
func (in *UserApiTokenDTO) DeepCopy() *UserApiTokenDTO {
	if in == nil {
		return nil
	}
	out := new(UserApiTokenDTO)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserDTO) DeepCopyInto(out *UserDTO) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Roles != nil {
		in, out := &in.Roles, &out.Roles
		*out = new([]string)
		if **in != nil {
			in, out := *in, *out
			*out = make([]string, len(*in))
			copy(*out, *in)
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserDTO.
func (in *UserDTO) DeepCopy() *UserDTO {
	if in == nil {
		return nil
	}
	out := new(UserDTO)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserSessionDTO) DeepCopyInto(out *UserSessionDTO) {
	*out = *in
	if in.ClientId != nil {
		in, out := &in.ClientId, &out.ClientId
		*out = new(string)
		**out = **in
	}
	if in.CreatedTime != nil {
		in, out := &in.CreatedTime, &out.CreatedTime
		*out = (*in).DeepCopy()
	}
	if in.LastRefreshTime != nil {
		in, out := &in.LastRefreshTime, &out.LastRefreshTime
		*out = (*in).DeepCopy()
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = new(string)
		**out = **in
	}
	if in.SessionId != nil {
		in, out := &in.SessionId, &out.SessionId
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserSessionDTO.
func (in *UserSessionDTO) DeepCopy() *UserSessionDTO {
	if in == nil {
		return nil
	}
	out := new(UserSessionDTO)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VoiceDTO) DeepCopyInto(out *VoiceDTO) {
	*out = *in
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.Locale != nil {
		in, out := &in.Locale, &out.Locale
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VoiceDTO.
func (in *VoiceDTO) DeepCopy() *VoiceDTO {
	if in == nil {
		return nil
	}
	out := new(VoiceDTO)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WidgetDTO) DeepCopyInto(out *WidgetDTO) {
	*out = *in
	if in.Column != nil {
		in, out := &in.Column, &out.Column
		*out = new(int32)
		**out = **in
	}
	if in.Command != nil {
		in, out := &in.Command, &out.Command
		*out = new(string)
		**out = **in
	}
	if in.Encoding != nil {
		in, out := &in.Encoding, &out.Encoding
		*out = new(string)
		**out = **in
	}
	if in.ForceAsItem != nil {
		in, out := &in.ForceAsItem, &out.ForceAsItem
		*out = new(bool)
		**out = **in
	}
	if in.Height != nil {
		in, out := &in.Height, &out.Height
		*out = new(int32)
		**out = **in
	}
	if in.Icon != nil {
		in, out := &in.Icon, &out.Icon
		*out = new(string)
		**out = **in
	}
	if in.Iconcolor != nil {
		in, out := &in.Iconcolor, &out.Iconcolor
		*out = new(string)
		**out = **in
	}
	if in.InputHint != nil {
		in, out := &in.InputHint, &out.InputHint
		*out = new(string)
		**out = **in
	}
	if in.Item != nil {
		in, out := &in.Item, &out.Item
		*out = new(EnrichedItemDTO)
		(*in).DeepCopyInto(*out)
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.LabelSource != nil {
		in, out := &in.LabelSource, &out.LabelSource
		*out = new(string)
		**out = **in
	}
	if in.Labelcolor != nil {
		in, out := &in.Labelcolor, &out.Labelcolor
		*out = new(string)
		**out = **in
	}
	if in.Legend != nil {
		in, out := &in.Legend, &out.Legend
		*out = new(bool)
		**out = **in
	}
	if in.LinkedPage != nil {
		in, out := &in.LinkedPage, &out.LinkedPage
		*out = new(PageDTO)
		(*in).DeepCopyInto(*out)
	}
	if in.Mappings != nil {
		in, out := &in.Mappings, &out.Mappings
		*out = new([]MappingDTO)
		if **in != nil {
			in, out := *in, *out
			*out = make([]MappingDTO, len(*in))
			for i := range *in {
				(*in)[i].DeepCopyInto(&(*out)[i])
			}
		}
	}
	if in.MaxValue != nil {
		in, out := &in.MaxValue, &out.MaxValue
		*out = new(float32)
		**out = **in
	}
	if in.MinValue != nil {
		in, out := &in.MinValue, &out.MinValue
		*out = new(float32)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Pattern != nil {
		in, out := &in.Pattern, &out.Pattern
		*out = new(string)
		**out = **in
	}
	if in.Period != nil {
		in, out := &in.Period, &out.Period
		*out = new(string)
		**out = **in
	}
	if in.Refresh != nil {
		in, out := &in.Refresh, &out.Refresh
		*out = new(int32)
		**out = **in
	}
	if in.ReleaseCommand != nil {
		in, out := &in.ReleaseCommand, &out.ReleaseCommand
		*out = new(string)
		**out = **in
	}
	if in.ReleaseOnly != nil {
		in, out := &in.ReleaseOnly, &out.ReleaseOnly
		*out = new(bool)
		**out = **in
	}
	if in.Row != nil {
		in, out := &in.Row, &out.Row
		*out = new(int32)
		**out = **in
	}
	if in.SendFrequency != nil {
		in, out := &in.SendFrequency, &out.SendFrequency
		*out = new(int32)
		**out = **in
	}
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.Stateless != nil {
		in, out := &in.Stateless, &out.Stateless
		*out = new(bool)
		**out = **in
	}
	if in.StaticIcon != nil {
		in, out := &in.StaticIcon, &out.StaticIcon
		*out = new(bool)
		**out = **in
	}
	if in.Step != nil {
		in, out := &in.Step, &out.Step
		*out = new(float32)
		**out = **in
	}
	if in.SwitchSupport != nil {
		in, out := &in.SwitchSupport, &out.SwitchSupport
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Unit != nil {
		in, out := &in.Unit, &out.Unit
		*out = new(string)
		**out = **in
	}
	if in.Url != nil {
		in, out := &in.Url, &out.Url
		*out = new(string)
		**out = **in
	}
	if in.Valuecolor != nil {
		in, out := &in.Valuecolor, &out.Valuecolor
		*out = new(string)
		**out = **in
	}
	if in.Visibility != nil {
		in, out := &in.Visibility, &out.Visibility
		*out = new(bool)
		**out = **in
	}
	if in.WidgetId != nil {
		in, out := &in.WidgetId, &out.WidgetId
		*out = new(string)
		**out = **in
	}
	if in.YAxisDecimalPattern != nil {
		in, out := &in.YAxisDecimalPattern, &out.YAxisDecimalPattern
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WidgetDTO.
func (in *WidgetDTO) DeepCopy() *WidgetDTO {
	if in == nil {
		return nil
	}
	out := new(WidgetDTO)
	in.DeepCopyInto(out)
	return out
}
